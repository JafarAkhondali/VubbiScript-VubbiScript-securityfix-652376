// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.es');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Añadir comentario";
Blockly.Msg.AUTH = "Autoriza a esta aplicación para guardar tu trabajo y permitir que lo compartas.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Cambiar el valor:";
Blockly.Msg.CHAT = "¡Chatea con tu colaborador escribiendo en este cuadro!";
Blockly.Msg.CLEAN_UP = "Limpiar los bloques";
Blockly.Msg.COLLAPSE_ALL = "Contraer bloques";
Blockly.Msg.COLLAPSE_BLOCK = "Contraer bloque";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "proporción";
Blockly.Msg.COLOUR_BLEND_TITLE = "combinar";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Combina dos colores con una proporción determinada (0,0–1,0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://es.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Elige un color de la paleta.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatorio";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Elige un color al azar.";
Blockly.Msg.COLOUR_RGB_BLUE = "azul";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "rojo";
Blockly.Msg.COLOUR_RGB_TITLE = "colorear con";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "romper el bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuar con la siguiente iteración del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Romper el bucle que lo contiene.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Saltar el resto de este bucle, y continuar con la siguiente iteración.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "ADVERTENCIA: Este bloque puede usarse sólo dentro de un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://es.wikipedia.org/wiki/Foreach";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "para cada elemento %1 en la lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento en una lista, establecer la variable '%1' al elemento y luego hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "contar con %1 desde %2 hasta %3 de a %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Hacer que la variable \"%1\" tome los valores desde el número de inicio hasta el número final, contando con el intervalo especificado, y hacer los bloques especificados.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Agregar una condición a este bloque.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Agregar una condición general final a este bloque.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sino";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sino si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es verdadero, entonces hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es verdadero, entonces hacer el primer bloque de declaraciones.  De lo contrario, hacer el segundo bloque de declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones. Si ninguno de los valores son verdaderos, hacer el último bloque de declaraciones.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://es.wikipedia.org/wiki/Bucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "hacer";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetir %1 veces";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Hacer algunas declaraciones varias veces.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repetir hasta";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetir mientras";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Mientras un valor sea falso, entonces hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Mientras un valor sea verdadero, entonces hacer algunas declaraciones.";
Blockly.Msg.DELETE_ALL_BLOCKS = "¿Eliminar todos los %1 bloques?";
Blockly.Msg.DELETE_BLOCK = "Eliminar bloque";
Blockly.Msg.DELETE_X_BLOCKS = "Eliminar %1 bloques";
Blockly.Msg.DEPRECATEDBLOCK = "This block is outdated and will be removed from Vubbi.";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Desactivar bloque";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
Blockly.Msg.ENABLE_BLOCK = "Activar bloque";
Blockly.Msg.EXPAND_ALL = "Expandir bloques";
Blockly.Msg.EXPAND_BLOCK = "Expandir bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas externas";
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.INLINE_INPUTS = "Entradas en línea";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crear lista vacía";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devuelve una lista, de longitud 0, sin ningún dato";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Agregar, eliminar o reorganizar las secciones para reconfigurar este bloque de lista.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Agregar un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crear una lista con cualquier número de elementos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# del final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y eliminar";
Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminar";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Devuelve el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimina el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimina el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # del final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "hasta #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el último";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener sublista desde el primero";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener sublista desde # del final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener sublista desde #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de una lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontrar la primera aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "encontrar la última aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve 0 si el elemento no se encuentra.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 está vacía";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Devuelve verdadero si la lista está vacía.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crear lista con el elemento %1 repetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea una lista que consta de un valor dado repetido el número de veces especificado.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insertar en";
Blockly.Msg.LISTS_SET_INDEX_SET = "establecer";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al inicio de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserta el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserta el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Añade el elemento al final de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento aleatoriamente en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Establece el primer elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Establece el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Establece el elemento en la posición especificada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Establece el último elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Establece un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascendente";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descendente";
Blockly.Msg.LISTS_SORT_TITLE = "tipo %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Ordenar una copia de una lista.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alfabético, ignorar tamaño";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numérico";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alfabético";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "hacer lista a partir de texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "hacer texto a partir de lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Unir una lista de textos en un solo texto, separado por un delimitador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividir el texto en una lista de textos, separando en cada delimitador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con delimitador";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Devuelve verdadero o falso.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "verdadero";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://es.wikipedia.org/wiki/Desigualdad_matemática";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Devuelve verdadero si ambas entradas son iguales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Devuelve verdadero si la primera entrada es mayor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Devuelve verdadero si la primera entrada es mayor o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Devuelve verdadero si la primera entrada es menor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Devuelve verdadero si la primera entrada es menor que o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Devuelve verdadero si ambas entradas son distintas.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "no %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Devuelve verdadero si la entrada es falsa. Devuelve falso si la entrada es verdadera.";
Blockly.Msg.LOGIC_NULL = "nulo";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Devuelve nulo.";
Blockly.Msg.LOGIC_OPERATION_AND = "y";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Devuelve verdadero si ambas entradas son verdaderas.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Devuelve verdadero si al menos una de las entradas es verdadera.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "prueba";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si es falso";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si es verdadero";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Comprueba la condición en \"prueba\". Si la condición es verdadera, devuelve el valor \"si es verdadero\"; de lo contrario, devuelve el valor \"si es falso\".";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://es.wikipedia.org/wiki/Aritmética";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Devuelve la suma de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Devuelve el cociente de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Devuelve la diferencia de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Devuelve el producto de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "cambiar %1 por %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Añadir un número a la variable «%1».";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://es.wikipedia.org/wiki/Anexo:Constantes_matemáticas";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Devuelve una de las constantes comunes: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "limitar %1 entre %2 y %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Limitar un número entre los límites especificados (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "es divisible por";
Blockly.Msg.MATH_IS_EVEN = "es par";
Blockly.Msg.MATH_IS_NEGATIVE = "es negativo";
Blockly.Msg.MATH_IS_ODD = "es impar";
Blockly.Msg.MATH_IS_POSITIVE = "es positivo";
Blockly.Msg.MATH_IS_PRIME = "es primo";
Blockly.Msg.MATH_IS_TOOLTIP = "Comprueba si un número es par, impar, primo, entero, positivo, negativo, o si es divisible por un número determinado. Devuelve verdadero o falso.";
Blockly.Msg.MATH_IS_WHOLE = "es entero";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resto de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Devuelve el resto al dividir los dos números.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://es.wikipedia.org/wiki/Número";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un número.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "promedio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "máximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mínimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento aleatorio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándar de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve el promedio (media aritmética) de los valores numéricos en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número más grande en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devuelve la mediana en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número más pequeño en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devuelve una lista de los elementos más comunes en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números en la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fracción aleatoria";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Devuelve una fracción aleatoria entre 0,0 (ambos inclusive) y 1.0 (exclusivo).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entero aleatorio de %1 a %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Devuelve un entero aleatorio entre los dos límites especificados, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://es.wikipedia.org/wiki/Redondeo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "redondear";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "redondear hacia abajo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "redondear hacia arriba";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Redondear un número hacia arriba o hacia abajo.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://es.wikipedia.org/wiki/Ra%C3%ADz_cuadrada";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "raíz cuadrada";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Devuelve el valor absoluto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Devuelve e a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Devuelve el logaritmo natural de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Devuelve la negación de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve 10 a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://es.wikipedia.org/wiki/Función_trigonométrica";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Devuelve el arcocoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Devuelve el arcoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Devuelve el arcotangente de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Devuelve el coseno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Devuelve el seno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Devuelve la tangente de un grado (no radián).";
Blockly.Msg.ME = "Yo";
Blockly.Msg.MENU_SAVE = "save";  // untranslated
Blockly.Msg.MENU_ZOOM = "zoom";  // untranslated
Blockly.Msg.MENU_ZOOM_IN = "zoom in";  // untranslated
Blockly.Msg.MENU_ZOOM_OUT = "zoom out";  // untranslated
Blockly.Msg.MENU_ZOOM_RESET = "reset zoom";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Variable nueva…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nombre de variable nueva:";
Blockly.Msg.NEW_VARIABLE_TYPED = "make new %1 memory item";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir declaraciones";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1' y usa su salida.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crear '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe esta función...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "hacer algo";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "para";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea una función sin salida.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "devuelve";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con una salida.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advertencia: Esta función tiene parámetros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Destacar definición de la función";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es verdadero, entonces devuelve un segundo valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advertencia: Este bloque solo puede ser utilizado dentro de la definición de una función.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nombre de entrada:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añadir una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Añadir, eliminar o reordenar entradas para esta función.";
Blockly.Msg.PROCEDURES_TITLE = "' procedure";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the '";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which declares ";  // untranslated
Blockly.Msg.REDO = "Rehacer";
Blockly.Msg.REMOVE_COMMENT = "Eliminar comentario";
Blockly.Msg.RENAME_VARIABLE = "Renombrar la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renombrar todas las variables «%1» a:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "añadir texto";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Añadir texto a la variable '%1'.";
Blockly.Msg.TEXT_APPEND_TO_VARNAME_DEFAULT = "text";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "a Mayúsculas Cada Palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a MAYÚSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Devuelve una copia del texto en un caso diferente.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtener la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtener la letra # del final";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtener la letra #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "obtener la última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtener letra aleatoria";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devuelve la letra en la posición especificada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Agregar un elemento al texto.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "unir";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque de texto.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la última letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "en el texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtener subcadena desde la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtener subcadena desde la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtener subcadena desde la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una porción determinada del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontrar la primera aparición del texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontrar la última aparición del texto";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera/última aparición del primer texto en el segundo texto. Devuelve 0 si el texto no se encuentra.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 está vacío";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Devuelve verdadero si el texto proporcionado está vacío.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crear texto con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Crear un fragmento de texto al unir cualquier número de elementos.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Devuelve el número de letras (incluyendo espacios) en el texto proporcionado.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "imprimir %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Imprimir el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicitar al usuario un número.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicitar al usuario un texto.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "solicitar número con el mensaje";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "solicitar texto con el mensaje";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://es.wikipedia.org/wiki/Cadena_de_caracteres";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una letra, palabra o línea de texto.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "quitar espacios de ambos lados de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "quitar espacios iniciales de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "quitar espacios finales de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia del texto sin los espacios de uno o ambos extremos.";
Blockly.Msg.TODAY = "Hoy";
Blockly.Msg.TOOLBOX_ACTION = "Action";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Colours";  // untranslated
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_COMPARE_TAG_EXAMPLE_TAG = "enemy";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_FIND_TAG_EXAMPLE_TAG = "scorekeeper";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_LOG_THIS_WORKS = "This works!";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_SCENE_TO = "gameover";  // untranslated
Blockly.Msg.TOOLBOX_CONTROL = "Logic";  // untranslated
Blockly.Msg.TOOLBOX_DECISION = "Decisions";  // untranslated
Blockly.Msg.TOOLBOX_DETECT = "Detect";  // untranslated
Blockly.Msg.TOOLBOX_DISPLAY = "Display";  // untranslated
Blockly.Msg.TOOLBOX_DRIVE = "Drive";  // untranslated
Blockly.Msg.TOOLBOX_EVENTS = "Events";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "Lights";  // untranslated
Blockly.Msg.TOOLBOX_LIST = "Lists";  // untranslated
Blockly.Msg.TOOLBOX_LOOP = "Loops";  // untranslated
Blockly.Msg.TOOLBOX_MATH = "Numbers";  // untranslated
Blockly.Msg.TOOLBOX_MATH_GROUP = "Math";  // untranslated
Blockly.Msg.TOOLBOX_MORE = "More blocks";  // untranslated
Blockly.Msg.TOOLBOX_MOVE = "Movement";  // untranslated
Blockly.Msg.TOOLBOX_OBJECTS = "Objects";  // untranslated
Blockly.Msg.TOOLBOX_OTHER = "Other...";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Functions";  // untranslated
Blockly.Msg.TOOLBOX_ROTATE = "Rotations";  // untranslated
Blockly.Msg.TOOLBOX_SENSOR = "Sensors";  // untranslated
Blockly.Msg.TOOLBOX_SOUND = "Sounds";  // untranslated
Blockly.Msg.TOOLBOX_TEXT = "Text";  // untranslated
Blockly.Msg.TOOLBOX_TIME = "Time";  // untranslated
Blockly.Msg.TOOLBOX_VARIABLE = "Memory";  // untranslated
Blockly.Msg.TOOLBOX_VECTOR = "Coordinates and directions";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Wait";  // untranslated
Blockly.Msg.UI_BLOCKS_HEADER = "Blocks";  // untranslated
Blockly.Msg.UI_GENERATED_CODE = "generated code";  // untranslated
Blockly.Msg.UI_LOAD = "Loading...";  // untranslated
Blockly.Msg.UI_LOAD_FAILURE = "Oops! Something went wrong while loading the file...";  // untranslated
Blockly.Msg.UI_NAME_FILE_MSG = "Please enter a name.";  // untranslated
Blockly.Msg.UI_SAVE = "Saving...";  // untranslated
Blockly.Msg.UI_SAVE_FAILURE = "Oops! Something went wrong while saving the file...";  // untranslated
Blockly.Msg.UI_UNNAMED_FILE = "unnamed file";  // untranslated
Blockly.Msg.UNDO = "Deshacer";
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_CODE = "print({QUOTE}Hello World C# code!{QUOTE});";  // untranslated
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_NAME = "my action";  // untranslated
Blockly.Msg.UNITY_CODE_BLOCK_TITLE = "new block";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_ENTER = "just";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_EXIT = "no longer";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_STAY = "still";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ = "the object I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ_DEFNAME = "collidedObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED = "the speed I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED_DEFNAME = "collisionSpeed";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR = "the speed I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR_DEFNAME = "collisionVector";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_1 = "when I";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_2 = "hit something";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ = "the object on the other side of the joint";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ_DEFNAME = "otherSideObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_TITLE = "when a joint breaks";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_DEFAULT = "do something";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_1 = "when I receive message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_2 = "with information";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_1 = "when I receive message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_2 = "";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_1 = "send message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_3 = "with information";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_REQUIRE_RECEIVER = "require someone listening";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_1 = "send message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_DOWN = "starts a click";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_STAY = "is still pressed down";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_UP = "is released";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_1 = "when a mouse button";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_2 = "on me";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_ENTER = "just started";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_EXIT = "is no longer";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_STAY = "is still";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_1 = "when the mouse";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_2 = "hovering over me";  // untranslated
Blockly.Msg.UNITY_EVENTS_START_TITLE = "when I start";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_ENTER = "just entered";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_EXIT = "just exited";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_STAY = "is still in";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ = "the other object";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ_DEFNAME = "otherObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_1 = "when something";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_2 = "my trigger area";  // untranslated
Blockly.Msg.UNITY_EVENTS_UPDATE_TITLE = "repeat every frame";  // untranslated
Blockly.Msg.UNITY_GENERATED_CODE_WARNING = "DO NOT CHANGE THIS FILE!#The code in this file is automatically generated!#Changes to the code will be overwritten when the file is resaved again from inside Vubbi.";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_DOWN = "just pressed down";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_STAY = "still pressed down";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_UP = "just released";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_1 = "button";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_2 = "";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha0 = "alphanumeric keyboard 0";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha1 = "alphanumeric keyboard 1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha2 = "alphanumeric keyboard 2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha3 = "alphanumeric keyboard 3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha4 = "alphanumeric keyboard 4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha5 = "alphanumeric keyboard 5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha6 = "alphanumeric keyboard 6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha7 = "alphanumeric keyboard 7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha8 = "alphanumeric keyboard 8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha9 = "alphanumeric keyboard 9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_AltGr = "alt Gr key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Ampersand = "ampersand key '&'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Asterisk = "asterisk key '*'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_At = "at key '@'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_BackQuote = "back quote key ";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Backslash = "backslash key '\'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Backspace = "backspace";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Break = "break key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_CapsLock = "capslock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Caret = "caret key '^'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Clear = "'clear'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Colon = "colon ':' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Comma = "comma ',' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Delete = "delete";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Dollar = "dollar sign key '$'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_DoubleQuote = "double quote '''";  // untranslated
Blockly.Msg.UNITY_KEYCODE_DownArrow = "arrow key down";  // untranslated
Blockly.Msg.UNITY_KEYCODE_End = "'end'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Equals = "equals '=' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Escape = "escape";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Exclaim = "exclamation mark '!'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F1 = "F1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F10 = "F10";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F11 = "F11";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F12 = "F12";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F13 = "F13";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F14 = "F14";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F15 = "F15";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F2 = "F2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F3 = "F3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F4 = "F4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F5 = "F5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F6 = "F6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F7 = "F7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F8 = "F8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F9 = "F9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Greater = "greater than '>' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Hash = "hash key '#'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Help = "help key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Home = "'home'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Insert = "'insert'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad0 = "numeric keyboard 0";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad1 = "numeric keyboard 1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad2 = "numeric keyboard 2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad3 = "numeric keyboard 3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad4 = "numeric keyboard 4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad5 = "numeric keyboard 5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad6 = "numeric keyboard 6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad7 = "numeric keyboard 7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad8 = "numeric keyboard 8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad9 = "numeric keyboard 9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadDivide = "numeric keyboard '/'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadEnter = "numeric keyboard enter";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadEquals = "numeric keyboard '='";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadMinus = "numeric keyboard '-'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadMultiply = "numeric keyboard '*'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadPeriod = "numeric keyboard '.'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadPlus = "numeric keyboard '+'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftAlt = "left Alt key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftApple = "left Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftArrow = "arrow key left";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftBracket = "left square bracket key '['";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftCommand = "left Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftControl = "left Control key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftParen = "left Parenthesis key '('";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftShift = "left shift key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftWindows = "left Windows key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Less = "less than '<' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Menu = "menu key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Minus = "minus '-' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse0 = "first (primary) mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse1 = "second (secondary) mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse2 = "third mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Numlock = "numlock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_PageDown = "'page down'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_PageUp = "'page up'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Pause = "'pause' (PC)";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Period = "period '.' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Plus = "plus key '+'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Print = "print key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Question = "question mark '?' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Quote = "quote key '";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Return = "enter";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightAlt = "right Alt key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightApple = "right Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightArrow = "arrow key right";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightBracket = "right square bracket key ']'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightCommand = "right Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightControl = "right Control key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightParen = "right Parenthesis key ')'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightShift = "right shift key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightWindows = "right Windows key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_ScrollLock = "scroll lock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Semicolon = "semicolon ';' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Slash = "slash '/' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Space = "space";  // untranslated
Blockly.Msg.UNITY_KEYCODE_SysReq = "sys req key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Tab = "tab";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Underscore = "underscore '_' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_UpArrow = "arrow key up";  // untranslated
Blockly.Msg.UNITY_LOG_TITLE = "print";  // untranslated
Blockly.Msg.UNITY_MEMORY_TITLE = "memory";  // untranslated
Blockly.Msg.UNITY_MEMORY_TOOLTIP = "The memory of this script.";  // untranslated
Blockly.Msg.UNITY_OBJECTS_CREATE_AND_GET_TITLE = "make clone of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_CREATE_TITLE = "make clone of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_DESTROY_TITLE = "destroy";  // untranslated
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_DEFAULT_TAG = "scorekeeper";  // untranslated
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_TITLE = "find GameObject with tag";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_1 = "tag of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_2 = "is";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_OF_TITLE = "tag of";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_EXECUTE_TITLE = "and do";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_1 = "remember";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_2 = "in";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_1 = "set velocity (°/s) of dyn. rigidbody of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_TITLE = "angular velocity (°/s) of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_1 = "push";  // untranslated
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_2 = "with force";  // untranslated
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_1 = "apply to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_2 = "a rotational force of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_1 = "set velocity (unit/s) of dyn. rigidbody of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_TITLE = "velocity (unit/s) of";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS2D_TITLE = "° (2D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_1 = "° around ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_2 = " (3D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_APPLY_VECTOR_TITLE = " rotated by ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_1 = "combine rotations: rotate first ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_2 = " and then ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_2D_TITLE_1 = "2D direction (0°-360°) of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_1 = "difference between rotation ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_2 = " and ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_3 = " in degrees";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ROTATION_TITLE = "rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_IDENTITY_TITLE = "not rotated";  // untranslated
Blockly.Msg.UNITY_QUATERNION_INVERSE_TITLE = "inverse rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_NEG = "negative side of my x-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_POS = "positive side of my x-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_NEG = "negative side of my y-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_POS = "positive side of my y-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_1 = "rotation where the ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_2 = " points towards ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_3 = " from ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_4 = " (2D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_1 = "rotation around axis ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_2 = " where my ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_3 = " points towards ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_4 = " from ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_1 = "change rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_2 = "with";  // untranslated
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_1 = "set rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_2 = " on ";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST = "the distance";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST_DEFNAME = "distance";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL = "the normal vector where the laser hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL_DEFNAME = "normal";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ = "the object that got hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ_DEFNAME = "hitObject";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT = "the point where the laser hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT_DEFNAME = "point";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_1 = "shoot a laser";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_2 = "from position";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_3 = "in direction";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_4 = "when it hits do";  // untranslated
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_1 = "set appearance of";  // untranslated
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_SCENE_GOTO_TITLE = "go to scene with name";  // untranslated
Blockly.Msg.UNITY_SCREEN_CAMERA_MAIN_TITLE = "the main camera object";  // untranslated
Blockly.Msg.UNITY_SCREEN_MOUSE_POSITION_TITLE = "pixel position of the mouse on the screen";  // untranslated
Blockly.Msg.UNITY_SCREEN_MOUSE_SCENE_POSITION_2D_TITLE = "position of the mouse in the scene with z=0 (2D)";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_1 = "pixel position on screen of coordinate";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_SIZE_TITLE = "size of screen in pixels";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_1 = "look direction in scene of pixel position";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_1 = "coordinate in scene of pixel position";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_3 = "on the plane with normal";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_4 = "containing point";  // untranslated
Blockly.Msg.UNITY_THIS = "myself";  // untranslated
Blockly.Msg.UNITY_TIME_DELTA_TITLE = "delta time";  // untranslated
Blockly.Msg.UNITY_TIME_LEVELLOAD_TITLE = "time since start of the scene";  // untranslated
Blockly.Msg.UNITY_TIME_LOOP_TITLE = "time since start of repeat";  // untranslated
Blockly.Msg.UNITY_TIME_REPEAT_TILL_TITLE = "repeat each frame 🕑 while ";  // untranslated
Blockly.Msg.UNITY_TIME_REPEAT_TITLE = "repeat each frame 🕑";  // untranslated
Blockly.Msg.UNITY_TIME_WAITFRAME_TITLE = "wait till next frame 🕑";  // untranslated
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_1 = "wait";  // untranslated
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_2 = "second(s) 🕑";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_1 = "jump";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_1 = "jump";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_2 = "additionally with";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_POSITION_TITLE = "position of";  // untranslated
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_1 = "set UI text of";  // untranslated
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_2 = "on";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_X_TITLE = "x";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_Y_TITLE = "y";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_Z_TITLE = "z";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_TITLE_1 = "of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_X_TITLE = "x of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_Y_TITLE = "y of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_Z_TITLE = "z of";  // untranslated
Blockly.Msg.UNITY_VECTOR_LENGTH_TITLE = "length of";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_ADD = "Gives the element wise sum of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MINUS = "Gives the element wise subtraction of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MULTIPLY = "Gives the element wise multiplication of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MULTIPLY_TITLE = "times";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_BACK = "backward (depth) (0, 0, -1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_DOWN = "down (0, -1, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_FORWARD = "forward (depth) (0, 0, 1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_LEFT = "left (-1, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ONE = "one (1, 1, 1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_RIGHT = "right (1, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_UP = "up (0, 1, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ZERO = "zero (0, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_CROSS = "cross";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_DOT = "dot";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_1 = "product of";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_2 = "and";  // untranslated
Blockly.Msg.UNITY_VECTOR_TOSIZE_TITLE = "scaled to length";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_1 = "position local to";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_2 = "of position";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_3 = "in the world";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_1 = "position in the world of position";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_2 = "local to";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elemento";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crear 'establecer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Devuelve el valor de esta variable.";
Blockly.Msg.VARIABLES_SET = "establecer %1 a %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crear 'obtener %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Establece esta variable para que sea igual a la entrada.";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "List Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "List Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "List Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "List String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_GAMEOBJECT = "GameObject";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_QUATERNION = "Rotation";  // untranslated
Blockly.Msg.VARIABLES_TYPE_SPRITE = "Sprite";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_VECTOR3 = "Vector3";  // untranslated
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;