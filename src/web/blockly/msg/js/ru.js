// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.ru');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Добавить комментарий";
Blockly.Msg.AUTH = "Пожалуйста, авторизуйте это приложение, чтоб можно было сохранять вашу работу и чтобы дать возможность вам делиться ей.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Измените значение:";
Blockly.Msg.CHAT = "Общайтесь со своим коллегой, печатая в этом поле!";
Blockly.Msg.CLEAN_UP = "Убрать блоки";
Blockly.Msg.COLLAPSE_ALL = "Свернуть блоки";
Blockly.Msg.COLLAPSE_BLOCK = "Свернуть блок";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "цвет 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "цвет 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "доля цвета 1";
Blockly.Msg.COLOUR_BLEND_TITLE = "смешать";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Смешивает два цвета в заданном соотношении (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://ru.wikipedia.org/wiki/Цвет";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Выберите цвет из палитры.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "случайный цвет";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Выбирает цвет случайным образом.";
Blockly.Msg.COLOUR_RGB_BLUE = "синего";
Blockly.Msg.COLOUR_RGB_GREEN = "зелёного";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "красного";
Blockly.Msg.COLOUR_RGB_TITLE = "цвет из";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "выйти из цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "перейти к следующему шагу цикла";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Прерывает этот цикл.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Пропускает остаток цикла и переходит к следующему шагу.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Предупреждение: этот блок может использоваться только внутри цикла.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "для каждого элемента %1 в списке %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Для каждого элемента в списке, присваивает переменной '%1' значение элемента  и выполняет указанные  команды.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "цикл по %1 от %2 до %3 с шагом %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Присваивает переменной '%1' значения от начального до конечного с заданным шагом и выполняет указанные команды.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Добавляет условие к блоку \"если\"";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Добавить заключительный подблок для случая, когда все условия ложны.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки блока \"если\".";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "иначе";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "иначе если";
Blockly.Msg.CONTROLS_IF_MSG_IF = "если";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Если условие истинно, выполняет команды.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Если условие истинно, выполняет первый блок команд. Иначе выполняется второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Если первое условие истинно, то выполняет первый блок команд. Иначе, если второе условие истинно, выполняет второй блок команд.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Если первое условие истинно, то выполняет первый блок команд.  В противном случае, если второе условие истинно, выполняет второй блок команд.  Если ни одно из условий не истинно, выполняет последний блок команд.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://ru.wikipedia.org/wiki/Цикл_(программирование)";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "выполнить";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "повторить %1 раз";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Выполняет некоторые команды несколько раз.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "повторять, пока не";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "повторять, пока";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Пока значение ложно, выполняет команды";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Пока значение истинно, выполняет команды.";
Blockly.Msg.DELETE_ALL_BLOCKS = "Удалить все блоки (%1)?";
Blockly.Msg.DELETE_BLOCK = "Удалить блок";
Blockly.Msg.DELETE_X_BLOCKS = "Удалить %1 блоков";
Blockly.Msg.DEPRECATEDBLOCK = "This block is outdated and will be removed from Vubbi.";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Отключить блок";
Blockly.Msg.DUPLICATE_BLOCK = "Скопировать";
Blockly.Msg.ENABLE_BLOCK = "Включить блок";
Blockly.Msg.EXPAND_ALL = "Развернуть блоки";
Blockly.Msg.EXPAND_BLOCK = "Развернуть блок";
Blockly.Msg.EXTERNAL_INPUTS = "Вставки снаружи";
Blockly.Msg.HELP = "Справка";
Blockly.Msg.INLINE_INPUTS = "Вставки внутри";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "создать пустой список";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Возвращает список длины 0, не содержащий данных";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "список";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Добавьте, удалите, переставьте элементы для переделки блока списка.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "создать список из";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Добавляет элемент к списку.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Создаёт список с любым числом элементов.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "первый";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "№ с конца";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "взять";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "взять и удалить";
Blockly.Msg.LISTS_GET_INDEX_LAST = "последний";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "произвольный";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "удалить";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Возвращает элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Удаляет и возвращает первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Удаляет и возвращает элемент в указанной позиции списка (№1 -  последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Удаляет и возвращает элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Удаляет и возвращает последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Удаляет и возвращает случайный элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Удаляет первый элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Удаляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Удаляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Удаляет последний элемент списка.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Удаляет случайный элемент списка.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "по № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "по №";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "по последний";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "взять подсписок с первого";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "взять подсписок с № с конца";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "взять подсписок с №";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Создаёт копию указанной части списка.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "найти первое вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "найти последнее вхождение элемента";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения элемента в списке. Возвращает 0, если элемент не найден.";
Blockly.Msg.LISTS_INLIST = "в списке";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Возвращает значение истина, если список пуст.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "длина %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Возвращает длину списка.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "создать список из элемента %1, повторяющегося %2 раз";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Создаёт список, состоящий из заданного числа копий элемента.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "=";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "вставить в";
Blockly.Msg.LISTS_SET_INDEX_SET = "присвоить";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Вставляет элемент в начало списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Вставляет элемент в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Вставляет элемент в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Добавляет элемент в конец списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Вставляет элемент в случайное место в списке.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Присваивает значение первому элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Присваивает значение элементу в указанной позиции списка (№1 - последний элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Присваивает значение элементу в указанной позиции списка (№1 - первый элемент).";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Присваивает значение последнему элементу списка.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Присваивает значение случайному элементу списка.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "по возрастанию";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "по убыванию";
Blockly.Msg.LISTS_SORT_TITLE = "сортировать %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Сортировать копию списка.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "сделать список из текста";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "собрать текст из списка";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Соединяет сптсок текстов в один текст с разделителями.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Разбивает текст в список текстов, по разделителям.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "с разделителем";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "ложь";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Возвращает значение истина или ложь.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "истина";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D1%80%D0%B0%D0%B2%D0%B5%D0%BD%D1%81%D1%82%D0%B2%D0%BE";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Возвращает значение истина, если вставки равны.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Возвращает значение истина, если первая вставка больше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Возвращает значение истина, если первая вставка больше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Возвращает значение истина, если первая вставка меньше второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Возвращает значение истина, если первая вставка меньше или равна  второй.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Возвращает значение истина, если вставки не равны.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "не %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Возвращает значение истина, если вставка ложна.  Возвращает значение ложь, если вставка истинна.";
Blockly.Msg.LOGIC_NULL = "ничто";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Возвращает ничто.";
Blockly.Msg.LOGIC_OPERATION_AND = "и";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "или";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Возвращает значение истина, если обе вставки истинны.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Возвращает значение истина, если хотя бы одна из вставок истинна.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "выбрать по";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://ru.wikipedia.org/wiki/Тернарная_условная_операция";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "если ложь";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "если истина";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Проверяет условие выбора. Если условие истинно, возвращает первое значение, в противном случае возвращает второе значение.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://ru.wikipedia.org/wiki/Арифметика";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Возвращает сумму двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Возвращает частное от деления первого числа на второе.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Возвращает разность двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Возвращает произведение двух чисел.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Возвращает первое число, возведённое в степень второго числа.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://ru.wikipedia.org/wiki/%D0%98%D0%B4%D0%B8%D0%BE%D0%BC%D0%B0_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29#.D0.98.D0.BD.D0.BA.D1.80.D0.B5.D0.BC.D0.B5.D0.BD.D1.82";
Blockly.Msg.MATH_CHANGE_TITLE = "увеличить %1 на %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Добавляет число к переменной '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://ru.wikipedia.org/wiki/Математическая_константа";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Возвращает одну из распространённых  констант: π (3.141...), e (2.718...), φ (1.618...), sqrt(2) (1.414...), sqrt(½) (0.707...) или ∞ (бесконечность).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "ограничить %1 снизу %2 сверху %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Ограничивает число нижней и верхней границами (включительно).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "делится на";
Blockly.Msg.MATH_IS_EVEN = "чётное";
Blockly.Msg.MATH_IS_NEGATIVE = "отрицательное";
Blockly.Msg.MATH_IS_ODD = "нечётное";
Blockly.Msg.MATH_IS_POSITIVE = "положительное";
Blockly.Msg.MATH_IS_PRIME = "простое";
Blockly.Msg.MATH_IS_TOOLTIP = "Проверяет, является ли число чётным, нечётным, простым, целым, положительным, отрицательным или оно кратно определённому числу.  Возвращает значение истина или ложь.";
Blockly.Msg.MATH_IS_WHOLE = "целое";
Blockly.Msg.MATH_MODULO_HELPURL = "https://ru.wikipedia.org/wiki/Деление_с_остатком";
Blockly.Msg.MATH_MODULO_TITLE = "остаток от %1 : %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Возвращает остаток от деления двух чисел.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://ru.wikipedia.org/wiki/Число";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Число.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "среднее арифметическое списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "наибольшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "медиана списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "наименьшее в списке";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "моды списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "случайный элемент списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "стандартное отклонение списка";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "сумма списка";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Возвращает среднее арифметическое списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Возвращает наибольшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Возвращает медиану списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Возвращает наименьшее число списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Возвращает список наиболее часто встречающихся элементов списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Возвращает случайный элемент списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Возвращает стандартное отклонение списка.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Возвращает сумму всех чисел в списке.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "случайное число от 0 (включительно) до 1";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Возвращает случайное число от 0.0 (включительно) до 1.0.";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://ru.wikipedia.org/wiki/Генератор_псевдослучайных_чисел";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "случайное целое число от %1 для %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Возвращает случайное число между двумя заданными пределами (включая и их).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://ru.wikipedia.org/wiki/Округление";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "округлить";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "округлить к меньшему";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "округлить к большему";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Округляет число до большего или меньшего.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://ru.wikipedia.org/wiki/Квадратный_корень";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "модуль";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "квадратный корень";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Возвращает модуль числа";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Возвращает е в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Возвращает натуральный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Возвращает десятичный логарифм числа.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Возвращает противоположное число.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Возвращает 10 в указанной степени.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Возвращает квадратный корень числа.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://ru.wikipedia.org/wiki/Тригонометрические_функции";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Возвращает арккосинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Возвращает арксинус (в градусах).";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Возвращает арктангенс (в градусах)";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Возвращает косинус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Возвращает синус угла в градусах.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Возвращает тангенс угла в градусах.";
Blockly.Msg.ME = "Мне";
Blockly.Msg.MENU_SAVE = "save";  // untranslated
Blockly.Msg.MENU_ZOOM = "zoom";  // untranslated
Blockly.Msg.MENU_ZOOM_IN = "zoom in";  // untranslated
Blockly.Msg.MENU_ZOOM_OUT = "zoom out";  // untranslated
Blockly.Msg.MENU_ZOOM_RESET = "reset zoom";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Новая переменная…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Имя новой переменной:";
Blockly.Msg.NEW_VARIABLE_TYPED = "make new %1 memory item";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "разрешить операторы";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://ru.wikipedia.org/wiki/Функция_%28программирование%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Исполняет определённую пользователем процедуру '%1' и возвращает вычисленное  значение.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "с:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Создать вызов '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Опишите эту функцию…";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "выполнить что-то";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "чтобы";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Создаёт процедуру, не возвращающую значение.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "вернуть";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Создаёт процедуру, возвращающую значение.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Предупреждение: эта функция имеет повторяющиеся параметры.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Выделить определение процедуры";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Если первое значение истинно, возвращает второе значение.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Предупреждение: Этот блок может использоваться только внутри определения функции.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "имя параметра:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Добавить входной параметр в функцию.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "параметры";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Добавить, удалить или изменить порядок входных параметров для этой функции.";
Blockly.Msg.PROCEDURES_TITLE = "' procedure";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the '";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which declares ";  // untranslated
Blockly.Msg.REDO = "Повторить";
Blockly.Msg.REMOVE_COMMENT = "Удалить комментарий";
Blockly.Msg.RENAME_VARIABLE = "Переименовать переменную…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Переименовать все переменные '%1' в:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "добавить текст";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "к";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Добавить текст к переменной «%1».";
Blockly.Msg.TEXT_APPEND_TO_VARNAME_DEFAULT = "text";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "в строчные буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "в Заглавные Начальные Буквы";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "в ЗАГЛАВНЫЕ БУКВЫ";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Возвращает копию текста с ЗАГЛАВНЫМИ или строчными буквами.";
Blockly.Msg.TEXT_CHARAT_FIRST = "взять первую букву";
Blockly.Msg.TEXT_CHARAT_FROM_END = "взять букву № с конца";
Blockly.Msg.TEXT_CHARAT_FROM_START = "взять букву №";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_CHARAT_LAST = "взять последнюю букву";
Blockly.Msg.TEXT_CHARAT_RANDOM = "взять случайную букву";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Возвращает букву в указанной позиции.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Добавить элемент к тексту.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "соединить";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Добавьте, удалите, переставьте фрагменты для переделки текстового блока.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "по букву № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "по букву №";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "по последнюю букву";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "в тексте";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "взять подстроку с первой буквы";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "взять подстроку с буквы № с конца";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "взять подстроку с буквы №";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Возвращает указанную часть текста.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "в тексте";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "найти первое вхождение текста";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "найти последнее вхождение текста";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Возвращает номер позиции первого/последнего вхождения первого текста во  втором.  Возвращает 0, если текст не найден.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 пуст";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Возвращает значение истина, если предоставленный текст пуст.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "создать текст из";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Создаёт фрагмент текста, объединяя любое число элементов";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "длина %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Возвращает число символов (включая пробелы) в заданном тексте.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "напечатать %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Печатает текст, число или другой объект.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Запросить у пользователя число.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Запросить у пользователя текст.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "запросить число с подсказкой";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "запросить текст с подсказкой";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://ru.wikipedia.org/wiki/Строковый_тип";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Буква, слово или строка текста.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "обрезать пробелы с двух сторон";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "обрезать пробелы слева";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "обрезать пробелы справа";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Возвращает копию текста с пробелами, удалеными с одного или обоих концов.";
Blockly.Msg.TODAY = "Сегодня";
Blockly.Msg.TOOLBOX_ACTION = "Action";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Colours";  // untranslated
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_COMPARE_TAG_EXAMPLE_TAG = "enemy";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_FIND_TAG_EXAMPLE_TAG = "scorekeeper";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_LOG_THIS_WORKS = "This works!";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_SCENE_TO = "gameover";  // untranslated
Blockly.Msg.TOOLBOX_CONTROL = "Logic";  // untranslated
Blockly.Msg.TOOLBOX_DECISION = "Decisions";  // untranslated
Blockly.Msg.TOOLBOX_DETECT = "Detect";  // untranslated
Blockly.Msg.TOOLBOX_DISPLAY = "Display";  // untranslated
Blockly.Msg.TOOLBOX_DRIVE = "Drive";  // untranslated
Blockly.Msg.TOOLBOX_EVENTS = "Events";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "Lights";  // untranslated
Blockly.Msg.TOOLBOX_LIST = "Lists";  // untranslated
Blockly.Msg.TOOLBOX_LOOP = "Loops";  // untranslated
Blockly.Msg.TOOLBOX_MATH = "Numbers";  // untranslated
Blockly.Msg.TOOLBOX_MATH_GROUP = "Math";  // untranslated
Blockly.Msg.TOOLBOX_MORE = "More blocks";  // untranslated
Blockly.Msg.TOOLBOX_MOVE = "Movement";  // untranslated
Blockly.Msg.TOOLBOX_OBJECTS = "Objects";  // untranslated
Blockly.Msg.TOOLBOX_OTHER = "Other...";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Functions";  // untranslated
Blockly.Msg.TOOLBOX_ROTATE = "Rotations";  // untranslated
Blockly.Msg.TOOLBOX_SENSOR = "Sensors";  // untranslated
Blockly.Msg.TOOLBOX_SOUND = "Sounds";  // untranslated
Blockly.Msg.TOOLBOX_TEXT = "Text";  // untranslated
Blockly.Msg.TOOLBOX_TIME = "Time";  // untranslated
Blockly.Msg.TOOLBOX_VARIABLE = "Memory";  // untranslated
Blockly.Msg.TOOLBOX_VECTOR = "Coordinates and directions";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Wait";  // untranslated
Blockly.Msg.UI_BLOCKS_HEADER = "Blocks";  // untranslated
Blockly.Msg.UI_GENERATED_CODE = "generated code";  // untranslated
Blockly.Msg.UI_LOAD = "Loading...";  // untranslated
Blockly.Msg.UI_LOAD_FAILURE = "Oops! Something went wrong while loading the file...";  // untranslated
Blockly.Msg.UI_NAME_FILE_MSG = "Please enter a name.";  // untranslated
Blockly.Msg.UI_SAVE = "Saving...";  // untranslated
Blockly.Msg.UI_SAVE_FAILURE = "Oops! Something went wrong while saving the file...";  // untranslated
Blockly.Msg.UI_UNNAMED_FILE = "unnamed file";  // untranslated
Blockly.Msg.UNDO = "Отменить";
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_CODE = "print({QUOTE}Hello World C# code!{QUOTE});";  // untranslated
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_NAME = "my action";  // untranslated
Blockly.Msg.UNITY_CODE_BLOCK_TITLE = "new block";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_ENTER = "just";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_EXIT = "no longer";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_STAY = "still";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ = "the object I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ_DEFNAME = "collidedObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED = "the speed I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED_DEFNAME = "collisionSpeed";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR = "the speed I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR_DEFNAME = "collisionVector";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_1 = "when I";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_2 = "hit something";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ = "the object on the other side of the joint";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ_DEFNAME = "otherSideObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_TITLE = "when a joint breaks";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_DEFAULT = "do something";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_1 = "when I receive message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_2 = "with information";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_1 = "when I receive message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_2 = "";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_1 = "send message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_3 = "with information";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_REQUIRE_RECEIVER = "require someone listening";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_1 = "send message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_DOWN = "starts a click";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_STAY = "is still pressed down";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_UP = "is released";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_1 = "when a mouse button";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_2 = "on me";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_ENTER = "just started";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_EXIT = "is no longer";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_STAY = "is still";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_1 = "when the mouse";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_2 = "hovering over me";  // untranslated
Blockly.Msg.UNITY_EVENTS_START_TITLE = "when I start";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_ENTER = "just entered";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_EXIT = "just exited";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_STAY = "is still in";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ = "the other object";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ_DEFNAME = "otherObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_1 = "when something";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_2 = "my trigger area";  // untranslated
Blockly.Msg.UNITY_EVENTS_UPDATE_TITLE = "repeat every frame";  // untranslated
Blockly.Msg.UNITY_GENERATED_CODE_WARNING = "DO NOT CHANGE THIS FILE!#The code in this file is automatically generated!#Changes to the code will be overwritten when the file is resaved again from inside Vubbi.";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_DOWN = "just pressed down";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_STAY = "still pressed down";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_UP = "just released";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_1 = "button";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_2 = "";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha0 = "alphanumeric keyboard 0";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha1 = "alphanumeric keyboard 1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha2 = "alphanumeric keyboard 2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha3 = "alphanumeric keyboard 3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha4 = "alphanumeric keyboard 4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha5 = "alphanumeric keyboard 5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha6 = "alphanumeric keyboard 6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha7 = "alphanumeric keyboard 7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha8 = "alphanumeric keyboard 8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha9 = "alphanumeric keyboard 9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_AltGr = "alt Gr key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Ampersand = "ampersand key '&'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Asterisk = "asterisk key '*'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_At = "at key '@'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_BackQuote = "back quote key ";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Backslash = "backslash key '\'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Backspace = "backspace";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Break = "break key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_CapsLock = "capslock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Caret = "caret key '^'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Clear = "'clear'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Colon = "colon ':' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Comma = "comma ',' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Delete = "delete";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Dollar = "dollar sign key '$'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_DoubleQuote = "double quote '''";  // untranslated
Blockly.Msg.UNITY_KEYCODE_DownArrow = "arrow key down";  // untranslated
Blockly.Msg.UNITY_KEYCODE_End = "'end'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Equals = "equals '=' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Escape = "escape";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Exclaim = "exclamation mark '!'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F1 = "F1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F10 = "F10";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F11 = "F11";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F12 = "F12";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F13 = "F13";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F14 = "F14";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F15 = "F15";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F2 = "F2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F3 = "F3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F4 = "F4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F5 = "F5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F6 = "F6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F7 = "F7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F8 = "F8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F9 = "F9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Greater = "greater than '>' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Hash = "hash key '#'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Help = "help key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Home = "'home'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Insert = "'insert'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad0 = "numeric keyboard 0";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad1 = "numeric keyboard 1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad2 = "numeric keyboard 2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad3 = "numeric keyboard 3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad4 = "numeric keyboard 4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad5 = "numeric keyboard 5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad6 = "numeric keyboard 6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad7 = "numeric keyboard 7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad8 = "numeric keyboard 8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad9 = "numeric keyboard 9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadDivide = "numeric keyboard '/'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadEnter = "numeric keyboard enter";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadEquals = "numeric keyboard '='";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadMinus = "numeric keyboard '-'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadMultiply = "numeric keyboard '*'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadPeriod = "numeric keyboard '.'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadPlus = "numeric keyboard '+'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftAlt = "left Alt key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftApple = "left Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftArrow = "arrow key left";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftBracket = "left square bracket key '['";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftCommand = "left Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftControl = "left Control key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftParen = "left Parenthesis key '('";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftShift = "left shift key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftWindows = "left Windows key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Less = "less than '<' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Menu = "menu key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Minus = "minus '-' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse0 = "first (primary) mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse1 = "second (secondary) mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse2 = "third mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Numlock = "numlock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_PageDown = "'page down'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_PageUp = "'page up'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Pause = "'pause' (PC)";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Period = "period '.' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Plus = "plus key '+'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Print = "print key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Question = "question mark '?' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Quote = "quote key '";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Return = "enter";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightAlt = "right Alt key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightApple = "right Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightArrow = "arrow key right";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightBracket = "right square bracket key ']'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightCommand = "right Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightControl = "right Control key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightParen = "right Parenthesis key ')'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightShift = "right shift key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightWindows = "right Windows key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_ScrollLock = "scroll lock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Semicolon = "semicolon ';' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Slash = "slash '/' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Space = "space";  // untranslated
Blockly.Msg.UNITY_KEYCODE_SysReq = "sys req key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Tab = "tab";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Underscore = "underscore '_' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_UpArrow = "arrow key up";  // untranslated
Blockly.Msg.UNITY_LOG_TITLE = "print";  // untranslated
Blockly.Msg.UNITY_MEMORY_TITLE = "memory";  // untranslated
Blockly.Msg.UNITY_MEMORY_TOOLTIP = "The memory of this script.";  // untranslated
Blockly.Msg.UNITY_OBJECTS_CREATE_AND_GET_TITLE = "make clone of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_CREATE_TITLE = "make clone of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_DESTROY_TITLE = "destroy";  // untranslated
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_DEFAULT_TAG = "scorekeeper";  // untranslated
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_TITLE = "find GameObject with tag";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_1 = "tag of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_2 = "is";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_OF_TITLE = "tag of";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_EXECUTE_TITLE = "and do";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_1 = "remember";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_2 = "in";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_1 = "set velocity (°/s) of dyn. rigidbody of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_TITLE = "angular velocity (°/s) of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_1 = "push";  // untranslated
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_2 = "with force";  // untranslated
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_1 = "apply to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_2 = "a rotational force of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_1 = "set velocity (unit/s) of dyn. rigidbody of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_TITLE = "velocity (unit/s) of";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS2D_TITLE = "° (2D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_1 = "° around ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_2 = " (3D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_APPLY_VECTOR_TITLE = " rotated by ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_1 = "combine rotations: rotate first ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_2 = " and then ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_2D_TITLE_1 = "2D direction (0°-360°) of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_1 = "difference between rotation ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_2 = " and ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_3 = " in degrees";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ROTATION_TITLE = "rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_IDENTITY_TITLE = "not rotated";  // untranslated
Blockly.Msg.UNITY_QUATERNION_INVERSE_TITLE = "inverse rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_NEG = "negative side of my x-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_POS = "positive side of my x-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_NEG = "negative side of my y-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_POS = "positive side of my y-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_1 = "rotation where the ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_2 = " points towards ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_3 = " from ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_4 = " (2D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_1 = "rotation around axis ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_2 = " where my ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_3 = " points towards ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_4 = " from ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_1 = "change rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_2 = "with";  // untranslated
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_1 = "set rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_2 = " on ";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST = "the distance";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST_DEFNAME = "distance";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL = "the normal vector where the laser hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL_DEFNAME = "normal";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ = "the object that got hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ_DEFNAME = "hitObject";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT = "the point where the laser hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT_DEFNAME = "point";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_1 = "shoot a laser";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_2 = "from position";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_3 = "in direction";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_4 = "when it hits do";  // untranslated
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_1 = "set appearance of";  // untranslated
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_SCENE_GOTO_TITLE = "go to scene with name";  // untranslated
Blockly.Msg.UNITY_SCREEN_CAMERA_MAIN_TITLE = "the main camera object";  // untranslated
Blockly.Msg.UNITY_SCREEN_MOUSE_POSITION_TITLE = "pixel position of the mouse on the screen";  // untranslated
Blockly.Msg.UNITY_SCREEN_MOUSE_SCENE_POSITION_2D_TITLE = "position of the mouse in the scene with z=0 (2D)";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_1 = "pixel position on screen of coordinate";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_SIZE_TITLE = "size of screen in pixels";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_1 = "look direction in scene of pixel position";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_1 = "coordinate in scene of pixel position";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_3 = "on the plane with normal";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_4 = "containing point";  // untranslated
Blockly.Msg.UNITY_THIS = "myself";  // untranslated
Blockly.Msg.UNITY_TIME_DELTA_TITLE = "delta time";  // untranslated
Blockly.Msg.UNITY_TIME_LEVELLOAD_TITLE = "time since start of the scene";  // untranslated
Blockly.Msg.UNITY_TIME_LOOP_TITLE = "time since start of repeat";  // untranslated
Blockly.Msg.UNITY_TIME_REPEAT_TILL_TITLE = "repeat each frame 🕑 while ";  // untranslated
Blockly.Msg.UNITY_TIME_REPEAT_TITLE = "repeat each frame 🕑";  // untranslated
Blockly.Msg.UNITY_TIME_WAITFRAME_TITLE = "wait till next frame 🕑";  // untranslated
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_1 = "wait";  // untranslated
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_2 = "second(s) 🕑";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_1 = "jump";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_1 = "jump";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_2 = "additionally with";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_POSITION_TITLE = "position of";  // untranslated
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_1 = "set UI text of";  // untranslated
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_2 = "on";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_X_TITLE = "x";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_Y_TITLE = "y";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_Z_TITLE = "z";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_TITLE_1 = "of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_X_TITLE = "x of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_Y_TITLE = "y of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_Z_TITLE = "z of";  // untranslated
Blockly.Msg.UNITY_VECTOR_LENGTH_TITLE = "length of";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_ADD = "Gives the element wise sum of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MINUS = "Gives the element wise subtraction of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MULTIPLY = "Gives the element wise multiplication of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MULTIPLY_TITLE = "times";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_BACK = "backward (depth) (0, 0, -1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_DOWN = "down (0, -1, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_FORWARD = "forward (depth) (0, 0, 1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_LEFT = "left (-1, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ONE = "one (1, 1, 1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_RIGHT = "right (1, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_UP = "up (0, 1, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ZERO = "zero (0, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_CROSS = "cross";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_DOT = "dot";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_1 = "product of";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_2 = "and";  // untranslated
Blockly.Msg.UNITY_VECTOR_TOSIZE_TITLE = "scaled to length";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_1 = "position local to";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_2 = "of position";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_3 = "in the world";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_1 = "position in the world of position";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_2 = "local to";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "элемент";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Создать блок \"присвоить\" для %1";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Возвращает значение этой переменной.";
Blockly.Msg.VARIABLES_SET = "присвоить %1 = %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Создать вставку %1";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Присваивает переменной значение вставки.";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "List Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "List Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "List Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "List String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_GAMEOBJECT = "GameObject";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_QUATERNION = "Rotation";  // untranslated
Blockly.Msg.VARIABLES_TYPE_SPRITE = "Sprite";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_VECTOR3 = "Vector3";  // untranslated
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;