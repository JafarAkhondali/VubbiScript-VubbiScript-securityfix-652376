// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.hrx');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Kommentar hinzufüche";
Blockly.Msg.AUTH = "Weart ännre:";
Blockly.Msg.CHANGE_VALUE_TITLE = "Neie Variable...";
Blockly.Msg.CHAT = "Sprech mit unsrem Mitoorweiter doorrich renschreiwe von Text hier in den Kaste!";
Blockly.Msg.CLEAN_UP = "Clean up Blocks";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Blocke zusammerfalte";
Blockly.Msg.COLLAPSE_BLOCK = "Block zusammerfalte";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "Farreb 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "mit Farreb 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "im Verhältniss";
Blockly.Msg.COLOUR_BLEND_TITLE = "misch";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Vermischt 2 Farwe mit konfigurierbare Farrebverhältniss (0.0 - 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://hrx.wikipedia.org/wiki/Farreb";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Wähl en Farreb von der Palett.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "zufälliche Farwe";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Wähl en Farreb noh dem Zufallsprinzip.";
Blockly.Msg.COLOUR_RGB_BLUE = "blau";
Blockly.Msg.COLOUR_RGB_GREEN = "grün";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "rot";
Blockly.Msg.COLOUR_RGB_TITLE = "Färreb mit";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "ausbreche aus der Schleif";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "mit der nächste Iteration fortfoohre aus der Schleifa";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Die umgebne Schleif beenne.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Die Oonweisung abbreche und mit der nächste Schleifiteration fortfoohre.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Warnung: Die block sollt nuar in en Schleif verwennet sin.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "Für Weart %1 aus der List %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Füahr en Oonweisung für jede Weart in der List aus und setzt dabei die Variable \"%1\" uff den aktuelle List Weart.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "Zähl %1 von %2 bis %3 mit %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Zähl die Variable \"%1\" von enem Startweart bis zu enem Zielweart und füahrefür jede Weart en Oonweisung aus.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "En weitre Bedingung hinzufüche.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "En orrer Bedingung hinzufüche, füahrt en Oonweisung aus falls ken Bedingung zutrifft.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Hinzufüche, entferne orrer sortiere von Sektione";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "orrer";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "orrer wenn";
Blockly.Msg.CONTROLS_IF_MSG_IF = "wenn";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Wenn en Bedingung woahr (true) ist, dann füahr en Oonweisung aus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Wenn en Bedingung woahr (true) ist, dann füahr die earscht Oonweisung aus.  Ansonscht füahr die zwooite Oonweisung aus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Wenn der erschte Bedingung woahr (true) ist, dann füahr die erschte Oonweisung aus.  Orrer wenn die zwooite Bedingung woahr (true) ist, dann füahr die zwooite Oonweisung aus.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Wenn der erscht Bedingung woahr (true) ist, dann füahr die erschte Oonweisung aus.  Orrer wenn die zwooite Bedingung woahr (true) ist, dann füahr die zwooite Oonweisung aus.  Falls ken der beide Bedingungen woahr (true) ist, dann füahr die dritte Oonweisung aus.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://hrx.wikipedia.org/wiki/For-Schleif";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "mach";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "wiederhol %1 mol";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "En Oonweisung meahrfach ausführe.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "Repetiere bis";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "Repetier solang";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Füahr die Oonweisung solang aus wie die Bedingung falsch (false) ist.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Füahr die Oonweisung solang aus wie die Bedingung woahr (true) ist.";
Blockly.Msg.DELETE_ALL_BLOCKS = "All %1 Bausten lösche?";
Blockly.Msg.DELETE_BLOCK = "Block lösche";
Blockly.Msg.DELETE_X_BLOCKS = "Block %1 lösche";
Blockly.Msg.DEPRECATEDBLOCK = "This block is outdated and will be removed from Vubbi.";  // untranslated
Blockly.Msg.DISABLE_BLOCK = "Block deaktivieren";
Blockly.Msg.DUPLICATE_BLOCK = "Kopieren";
Blockly.Msg.ENABLE_BLOCK = "Block aktivieren";
Blockly.Msg.EXPAND_ALL = "Blocke expandiere";
Blockly.Msg.EXPAND_BLOCK = "Block entfalte";
Blockly.Msg.EXTERNAL_INPUTS = "External Inputsexterne Ingänge";
Blockly.Msg.HELP = "Hellef";
Blockly.Msg.INLINE_INPUTS = "interne Ingänge";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "Generier/erzeich en leear List";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Generier/erzeich en leear List ohne Inhalt.";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "List";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Hinzufüche, entferne und sortiere von Elemente.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "Erzeich List mit";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "En Element zur List hinzufüche.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Generier/erzeich en List mit konfigurierte Elemente.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "earste";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "#te von hinne";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "Nehm";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "Nehm und entfern";
Blockly.Msg.LISTS_GET_INDEX_LAST = "letzte";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "zufälliches";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "Entfern";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Extrahiert das earste Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Extrahiert das #1te Element der List sei End.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Extrahiert das #1te Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Extrahiert das letzte Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Extrahiert en zufälliches Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Extrahiert und entfernt das earste Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Extrahiert und entfernt das #1te Element der List sei End.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Extrahiert und entfernt das #1te Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Extrahiert und entfernt das letzte Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Extrahiert und entfernt en zufälliches Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Entfernt das earste Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Entfernt das #1te Element der List sei End.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Entfernt das #1te Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Entfernt das letzte Element von der List.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Entfernt en zufälliches Element von der List.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "zu # vom End";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "zu #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "zum Letzte";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "hol Unnerliste vom Earste";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "hol Unnerliste von # vom End";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "hol Unnerlist von #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Generiert en Kopie von en definierte Tel von en List.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "Such earstes Voarkommniss";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "Such letztes Voarkommniss";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Sucht die Position (index) von en Element in der List Gebt 0 zurück wenn nixs gefunn woard.";
Blockly.Msg.LISTS_INLIST = "in der List";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 ist leear?";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Ist woahr (true), wenn die List leear ist.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "länge %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Die Oonzoohl von Elemente in der List.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "Erzich List mit Element %1 wiederhol das %2 mol";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Erzeicht en List mit en variable Oonzoohl von Elemente";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "uff";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "tue ren setz an";
Blockly.Msg.LISTS_SET_INDEX_SET = "setz";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Tut das Element an en Oonfang von en List ren setze.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Tut das Element ren setze an en definierte Position an en List.  #1 ist das letzte Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Tut das Element ren setze an en definierte Position an en List.  #1 ist das earschte Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Oonhängt das Element zu en List sei End.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Tut das Element zufällich an en List ren setze.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Sets the first item in a list.Setzt das earschte Element an en list.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Setzt das Element zu en definierte Position an en List. #1 ist das letzte Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Setzt das Element zu en definierte Stell in en List.  #1 ist das earschte Element.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Setzt das letzte Element an en List.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Setzt en zufälliches Element an en List.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "ascending";  // untranslated
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "descending";  // untranslated
Blockly.Msg.LISTS_SORT_TITLE = "sort %1 %2 %3";  // untranslated
Blockly.Msg.LISTS_SORT_TOOLTIP = "Sort a copy of a list.";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabetic, ignore case";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numeric";  // untranslated
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabetic";  // untranslated
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "make list from text";  // untranslated
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "make text from list";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Join a list of texts into one text, separated by a delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Split text into a list of texts, breaking at each delimiter.";  // untranslated
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "with delimiter";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falsch";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Ist entweder woahr (true) orrer falsch (false)";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "woahr";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://hrx.wikipedia.org/wiki/Vergleich_%28Zahlen%29";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Ist woahr (true) wenn beide Wearte identisch sind.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Ist woahr (true) wenn der erschte Weart grösser als der zwooite Weart ist.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Ist woahr (true) wenn der erschte Weart grösser als orrer gleich gross wie zwooite Weart ist.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Ist woahr (true) wenn der earschte Weart klener als der zwooite Weart ist.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Ist woahr (true) wenn der earscht Weart klener als orrer gleich gross wie zwooite Weart ist.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Ist woahr (true) wenn beide Wearte unnerschiedlich sind.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "net %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Ist woahr (true) wenn der Ingäweweart falsch (false) ist.  Ist falsch (false) wenn der Ingäweweart woahr (true) ist.";
Blockly.Msg.LOGIC_NULL = "null";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Is NULL.";
Blockly.Msg.LOGIC_OPERATION_AND = "und";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "orrer";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Ist woahr (true) wenn beide Wearte woahr (true) sind.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Ist woahr (true) wenn en von der beide Wearte woahr (true) ist.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "wenn falsch";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "wenn woahr";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Üwerprüft en Bedingung \"test\". Wenn die Bedingung woahr ist weerd der \"wenn woahr\" Weart zurückgeb, annerfalls der \"wenn falsch\" Weart";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://hrx.wikipedia.org/wiki/Grundrechenoort";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Ist die Summe zwooier Wearte.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Ist der Quotient zwooier Wearte.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Ist die Differenz zwooier Wearte.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Ist das Produkt zwooier Wearte.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Ist der earschte Weart potenziert mit dem zoiten Weart.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://hrx.wikipedia.org/wiki/Inkrement_und_Dekrement";
Blockly.Msg.MATH_CHANGE_TITLE = "mach höcher / erhöhe %1 um %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Addiert en Weart zur Variable \"%1\" hinzu.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://hrx.wikipedia.org/wiki/Mathematische_Konstante";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Mathematische Konstante wie: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) oder ∞ (unendlich).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "begrenze %1 von %2 bis %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Begrenzt den Weartebereich mittels von / bis Wearte. (inklusiv)";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "ist telbar/kann getelt sin doorrich";
Blockly.Msg.MATH_IS_EVEN = "ist grood";
Blockly.Msg.MATH_IS_NEGATIVE = "ist negativ";
Blockly.Msg.MATH_IS_ODD = "ist ungrood";
Blockly.Msg.MATH_IS_POSITIVE = "ist positiv";
Blockly.Msg.MATH_IS_PRIME = "ist en Primenzoohl";
Blockly.Msg.MATH_IS_TOOLTIP = "Üwerprüft ob en Zoohl grood, ungrood, en Primenzoohl, ganzzoohlich, positiv, negativ orrer doorrich en zwooite Zoohl telbar ist.  Gebt woahr (true) orrer falsch (false) zurück.";
Blockly.Msg.MATH_IS_WHOLE = "ganze Zoohl";
Blockly.Msg.MATH_MODULO_HELPURL = "https://hrx.wikipedia.org/wiki/Modulo";
Blockly.Msg.MATH_MODULO_TITLE = "Rest von %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Der Rest noh en Division.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://hrx.wikipedia.org/wiki/Zoohl";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "En Zoohl.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "Mittelweart en List";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "Maximalweart en List";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "Median von en List";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "Minimalweart von en List";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "Restweart von en List";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "Zufallsweart von en List";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "Standart/Padrong Abweichung von en List";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "Summe von en List";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Ist der Doorrichschnittsweart von aller Wearte in en List.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Ist der grösste Weart in en List.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Ist der Zentralweart von aller Wearte in en List.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Ist der klenste Weart in en List.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Findt den am häifichste voarkommend Weart in en List.  Falls ken Weart öftersch voarkomme als all annre, weard die originale List zurückgeche";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Geb en Zufallsweart aus der List zurück.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Ist die standartiesierte/padronisierte Standartabweichung/Padrongabweichung von aller Wearte in der List";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Ist die Summ aller Wearte in en List.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://hex.wikipedia.org/wiki/Zufallszoohle";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "Zufallszoohl (0.0 -1.0)";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Generier/erzeich en Zufallszoohl zwischich 0.0 (inklusiv) und 1.0 (exklusiv).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://hrx.wikipedia.org/wiki/Zufallszahlen";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "ganzoohlicher Zufallswearte zwischich %1 bis %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Generier/erzeich en ganzähliche Zufallsweart zwischich zwooi Wearte (inklusiv).";
Blockly.Msg.MATH_ROUND_HELPURL = "https://hrx.wikipedia.org/wiki/Runden";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "runde";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "ab runde";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "uff runde";
Blockly.Msg.MATH_ROUND_TOOLTIP = "En Zoohl uff orrer ab runde.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://hrx.wikipedia.org/wiki/Quadratwoorzel";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "Absolutweart";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "Quadratwoorzel";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Ist der Absolutweart von en Weart.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Ist Weart von der Exponentialfunktion von en Weart.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Ist der natüarliche Logarithmus von en Weart.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Ist der dekoodische Logarithmus von en Weart.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Negiert en Weart.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Rechnet 10 hoch Ingäbweart.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Ist die Qudratwoorzel von en Weart.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://hrx.wikipedia.org/wiki/Trigonometrie";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Ist der Arcuscosinus von en Ingabweart.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Ist der Arcussinus von en Ingäbweart.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Ist der Arcustangens von en Ingäbweart.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Ist der Cosinus von en Winkel.";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Ist der Sinus von en Winkel.";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Ist der Tangens von en Winkel.";
Blockly.Msg.ME = "Ich";
Blockly.Msg.MENU_SAVE = "save";  // untranslated
Blockly.Msg.MENU_ZOOM = "zoom";  // untranslated
Blockly.Msg.MENU_ZOOM_IN = "zoom in";  // untranslated
Blockly.Msg.MENU_ZOOM_OUT = "zoom out";  // untranslated
Blockly.Msg.MENU_ZOOM_RESET = "reset zoom";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Neie Variable...";
Blockly.Msg.NEW_VARIABLE_TITLE = "Die neie Variable sei Noome:";
Blockly.Msg.NEW_VARIABLE_TYPED = "make new %1 memory item";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "allow statements";  // untranslated
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "mit:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://hrx.wikipedia.org/wiki/Prozedur_%28Programmierung%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ruf en Funktionsblock ohne Rückgäweart uff.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://hrx.wikipedia.org/wiki/Prozedur_%28Programmierung%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ruf en Funktionsblock mit Rückgäbweart uff.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "mit:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Generier/erzeich \"Uffruf %1\"";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe this function...";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "Funktionsblock";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "zu";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "En Funktionsblock ohne Rückgäbweart.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "geb zurück";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "En Funktionsblock mit Rückgäbweart.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Warnung: die Funktionsblock hot doppelt Parameter.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Markiear Funktionsblock";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Wenn der earste Weart woahr (true) ist, Geb den zwooite Weart zurück.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Warnung: Der Block därref nuar innich en Funktionsblock genutzt sin.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "Markiear Funktionsblock";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Generier/erzeich \"Uffruf %1\"";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "Parameter";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Variable:";
Blockly.Msg.PROCEDURES_TITLE = "' procedure";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the '";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which declares ";  // untranslated
Blockly.Msg.REDO = "Redo";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Kommentar entferne";
Blockly.Msg.RENAME_VARIABLE = "Die neie Variable sei Noome:";
Blockly.Msg.RENAME_VARIABLE_TITLE = "All \"%1\" Variable umbenenne in:";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "Text oonhänge";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "An";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Text an die Variable \"%1\" oonhänge.";
Blockly.Msg.TEXT_APPEND_TO_VARNAME_DEFAULT = "text";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "umwandle in klenbuchstoobe";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "umwandle in Wörter";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "umwandle in GROSSBUCHSTOOBE";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Wandelt Schreibweise von Texte um, in Grossbuchstoobe, Klenbuchstoobe orrer den earste Buchstoob von jedes Wort gross und die annre klen.";
Blockly.Msg.TEXT_CHARAT_FIRST = "hol earschte Buchstoob";
Blockly.Msg.TEXT_CHARAT_FROM_END = "hol Buchstoob # von End";
Blockly.Msg.TEXT_CHARAT_FROM_START = "hol Buchstoob #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "in Text";
Blockly.Msg.TEXT_CHARAT_LAST = "hol letztes Wort";
Blockly.Msg.TEXT_CHARAT_RANDOM = "hol zufälliches Buchstoob";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Extrahiear en Buchstoob von en spezifizierte Position.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "En Element zum Text hinzufüche.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "verbinne";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Hinzufüche, entfernne und sortiere von Elemente.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "bis #te Buchstoob von hinne";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "bis Buchstoob #te";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "bis letzte Buchstoob";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "in Text";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "earschte Buchstoob";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "hol #te Buchstoob von hinne";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "hol substring Buchstoob #te";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Schickt en bestimmstes Tel von dem Text retuar.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "im Text";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "Such der Begriff sein earstes Voarkommniss";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "Suche der Begriff sein letztes Vorkommniss.";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Findt das earste / letzte Voarkommniss von en Suchbegriffes in enem Text.  Gebt die Position von dem Begriff orrer 0 zurück.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 ist leer?";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Ist woahr (true), wenn der Text leer ist.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "Erstell Text aus";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Erstellt en Text doorrich das verbinne von mehre Textelemente.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "läng %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Die Oonzoohl von Zeiche in enem Text. (inkl. Leerzeiche)";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "Ausgäb %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Geb den Inhalt von en Variable aus.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Frocht den Benutzer noh en Zoohl.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Frocht den Benutzer noh enem Text.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "Frächt noh Zoohl mit Hinweis";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "Frocht noh Text mit Hinweis";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)https://hrx.wikipedia.org/wiki/Zeichenkette";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "En Buchstoob, Text orrer Satz.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "entfern Leerzeiche von Oonfang und End Seite";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "entferne Leerzeiche von Oonfang Seite";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "entferne Leerzeiche von End Seite von";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Entfernt Leerzeiche vom Oonfang und / orrer End von en Text.";
Blockly.Msg.TODAY = "Today";  // untranslated
Blockly.Msg.TOOLBOX_ACTION = "Action";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Colours";  // untranslated
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_COMPARE_TAG_EXAMPLE_TAG = "enemy";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_FIND_TAG_EXAMPLE_TAG = "scorekeeper";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_LOG_THIS_WORKS = "This works!";  // untranslated
Blockly.Msg.TOOLBOX_CONTENT_SCENE_TO = "gameover";  // untranslated
Blockly.Msg.TOOLBOX_CONTROL = "Logic";  // untranslated
Blockly.Msg.TOOLBOX_DECISION = "Decisions";  // untranslated
Blockly.Msg.TOOLBOX_DETECT = "Detect";  // untranslated
Blockly.Msg.TOOLBOX_DISPLAY = "Display";  // untranslated
Blockly.Msg.TOOLBOX_DRIVE = "Drive";  // untranslated
Blockly.Msg.TOOLBOX_EVENTS = "Events";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "Lights";  // untranslated
Blockly.Msg.TOOLBOX_LIST = "Lists";  // untranslated
Blockly.Msg.TOOLBOX_LOOP = "Loops";  // untranslated
Blockly.Msg.TOOLBOX_MATH = "Numbers";  // untranslated
Blockly.Msg.TOOLBOX_MATH_GROUP = "Math";  // untranslated
Blockly.Msg.TOOLBOX_MORE = "More blocks";  // untranslated
Blockly.Msg.TOOLBOX_MOVE = "Movement";  // untranslated
Blockly.Msg.TOOLBOX_OBJECTS = "Objects";  // untranslated
Blockly.Msg.TOOLBOX_OTHER = "Other...";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Functions";  // untranslated
Blockly.Msg.TOOLBOX_ROTATE = "Rotations";  // untranslated
Blockly.Msg.TOOLBOX_SENSOR = "Sensors";  // untranslated
Blockly.Msg.TOOLBOX_SOUND = "Sounds";  // untranslated
Blockly.Msg.TOOLBOX_TEXT = "Text";  // untranslated
Blockly.Msg.TOOLBOX_TIME = "Time";  // untranslated
Blockly.Msg.TOOLBOX_VARIABLE = "Memory";  // untranslated
Blockly.Msg.TOOLBOX_VECTOR = "Coordinates and directions";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Wait";  // untranslated
Blockly.Msg.UI_BLOCKS_HEADER = "Blocks";  // untranslated
Blockly.Msg.UI_GENERATED_CODE = "generated code";  // untranslated
Blockly.Msg.UI_LOAD = "Loading...";  // untranslated
Blockly.Msg.UI_LOAD_FAILURE = "Oops! Something went wrong while loading the file...";  // untranslated
Blockly.Msg.UI_NAME_FILE_MSG = "Please enter a name.";  // untranslated
Blockly.Msg.UI_SAVE = "Saving...";  // untranslated
Blockly.Msg.UI_SAVE_FAILURE = "Oops! Something went wrong while saving the file...";  // untranslated
Blockly.Msg.UI_UNNAMED_FILE = "unnamed file";  // untranslated
Blockly.Msg.UNDO = "Undo";  // untranslated
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_CODE = "print({QUOTE}Hello World C# code!{QUOTE});";  // untranslated
Blockly.Msg.UNITY_CODE_BLOCK_DEFAULT_NAME = "my action";  // untranslated
Blockly.Msg.UNITY_CODE_BLOCK_TITLE = "new block";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_ENTER = "just";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_EXIT = "no longer";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_OPT_STAY = "still";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ = "the object I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_OBJ_DEFNAME = "collidedObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED = "the speed I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_SPEED_DEFNAME = "collisionSpeed";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR = "the speed I collided with";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_PARAM_VECTOR_DEFNAME = "collisionVector";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_1 = "when I";  // untranslated
Blockly.Msg.UNITY_EVENTS_COLLIDE_TITLE_2 = "hit something";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ = "the object on the other side of the joint";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_PARAM_OBJ_DEFNAME = "otherSideObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_JOINTBREAKS_TITLE = "when a joint breaks";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_DEFAULT = "do something";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_1 = "when I receive message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_ARG_TITLE_2 = "with information";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_1 = "when I receive message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_RECEIVE_TITLE_2 = "";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_1 = "send message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_ARG_TITLE_3 = "with information";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_REQUIRE_RECEIVER = "require someone listening";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_1 = "send message";  // untranslated
Blockly.Msg.UNITY_EVENTS_MESSAGE_SEND_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_DOWN = "starts a click";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_STAY = "is still pressed down";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_OPT_UP = "is released";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_1 = "when a mouse button";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSECLICK_TITLE_2 = "on me";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_ENTER = "just started";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_EXIT = "is no longer";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_OPT_STAY = "is still";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_1 = "when the mouse";  // untranslated
Blockly.Msg.UNITY_EVENTS_MOUSEHOVER_TITLE_2 = "hovering over me";  // untranslated
Blockly.Msg.UNITY_EVENTS_START_TITLE = "when I start";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_ENTER = "just entered";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_EXIT = "just exited";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_OPT_STAY = "is still in";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ = "the other object";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_PARAM_OBJ_DEFNAME = "otherObject";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_1 = "when something";  // untranslated
Blockly.Msg.UNITY_EVENTS_TRIGGER_TITLE_2 = "my trigger area";  // untranslated
Blockly.Msg.UNITY_EVENTS_UPDATE_TITLE = "repeat every frame";  // untranslated
Blockly.Msg.UNITY_GENERATED_CODE_WARNING = "DO NOT CHANGE THIS FILE!#The code in this file is automatically generated!#Changes to the code will be overwritten when the file is resaved again from inside Vubbi.";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_DOWN = "just pressed down";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_STAY = "still pressed down";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_OPT_UP = "just released";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_1 = "button";  // untranslated
Blockly.Msg.UNITY_INPUT_GETKEY_TITLE_2 = "";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha0 = "alphanumeric keyboard 0";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha1 = "alphanumeric keyboard 1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha2 = "alphanumeric keyboard 2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha3 = "alphanumeric keyboard 3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha4 = "alphanumeric keyboard 4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha5 = "alphanumeric keyboard 5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha6 = "alphanumeric keyboard 6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha7 = "alphanumeric keyboard 7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha8 = "alphanumeric keyboard 8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Alpha9 = "alphanumeric keyboard 9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_AltGr = "alt Gr key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Ampersand = "ampersand key '&'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Asterisk = "asterisk key '*'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_At = "at key '@'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_BackQuote = "back quote key ";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Backslash = "backslash key '\'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Backspace = "backspace";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Break = "break key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_CapsLock = "capslock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Caret = "caret key '^'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Clear = "'clear'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Colon = "colon ':' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Comma = "comma ',' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Delete = "delete";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Dollar = "dollar sign key '$'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_DoubleQuote = "double quote '''";  // untranslated
Blockly.Msg.UNITY_KEYCODE_DownArrow = "arrow key down";  // untranslated
Blockly.Msg.UNITY_KEYCODE_End = "'end'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Equals = "equals '=' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Escape = "escape";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Exclaim = "exclamation mark '!'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F1 = "F1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F10 = "F10";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F11 = "F11";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F12 = "F12";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F13 = "F13";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F14 = "F14";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F15 = "F15";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F2 = "F2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F3 = "F3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F4 = "F4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F5 = "F5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F6 = "F6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F7 = "F7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F8 = "F8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_F9 = "F9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Greater = "greater than '>' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Hash = "hash key '#'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Help = "help key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Home = "'home'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Insert = "'insert'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad0 = "numeric keyboard 0";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad1 = "numeric keyboard 1";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad2 = "numeric keyboard 2";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad3 = "numeric keyboard 3";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad4 = "numeric keyboard 4";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad5 = "numeric keyboard 5";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad6 = "numeric keyboard 6";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad7 = "numeric keyboard 7";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad8 = "numeric keyboard 8";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Keypad9 = "numeric keyboard 9";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadDivide = "numeric keyboard '/'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadEnter = "numeric keyboard enter";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadEquals = "numeric keyboard '='";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadMinus = "numeric keyboard '-'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadMultiply = "numeric keyboard '*'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadPeriod = "numeric keyboard '.'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_KeypadPlus = "numeric keyboard '+'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftAlt = "left Alt key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftApple = "left Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftArrow = "arrow key left";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftBracket = "left square bracket key '['";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftCommand = "left Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftControl = "left Control key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftParen = "left Parenthesis key '('";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftShift = "left shift key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_LeftWindows = "left Windows key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Less = "less than '<' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Menu = "menu key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Minus = "minus '-' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse0 = "first (primary) mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse1 = "second (secondary) mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Mouse2 = "third mouse button";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Numlock = "numlock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_PageDown = "'page down'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_PageUp = "'page up'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Pause = "'pause' (PC)";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Period = "period '.' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Plus = "plus key '+'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Print = "print key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Question = "question mark '?' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Quote = "quote key '";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Return = "enter";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightAlt = "right Alt key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightApple = "right Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightArrow = "arrow key right";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightBracket = "right square bracket key ']'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightCommand = "right Command key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightControl = "right Control key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightParen = "right Parenthesis key ')'";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightShift = "right shift key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_RightWindows = "right Windows key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_ScrollLock = "scroll lock key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Semicolon = "semicolon ';' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Slash = "slash '/' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Space = "space";  // untranslated
Blockly.Msg.UNITY_KEYCODE_SysReq = "sys req key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Tab = "tab";  // untranslated
Blockly.Msg.UNITY_KEYCODE_Underscore = "underscore '_' key";  // untranslated
Blockly.Msg.UNITY_KEYCODE_UpArrow = "arrow key up";  // untranslated
Blockly.Msg.UNITY_LOG_TITLE = "print";  // untranslated
Blockly.Msg.UNITY_MEMORY_TITLE = "memory";  // untranslated
Blockly.Msg.UNITY_MEMORY_TOOLTIP = "The memory of this script.";  // untranslated
Blockly.Msg.UNITY_OBJECTS_CREATE_AND_GET_TITLE = "make clone of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_CREATE_TITLE = "make clone of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_DESTROY_TITLE = "destroy";  // untranslated
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_DEFAULT_TAG = "scorekeeper";  // untranslated
Blockly.Msg.UNITY_OBJECTS_FIND_TAG_TITLE = "find GameObject with tag";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_1 = "tag of";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_COMPARE_TITLE_2 = "is";  // untranslated
Blockly.Msg.UNITY_OBJECTS_TAG_OF_TITLE = "tag of";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_EXECUTE_TITLE = "and do";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_1 = "remember";  // untranslated
Blockly.Msg.UNITY_PARAMOUTPUT_TITLE_2 = "in";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_1 = "set velocity (°/s) of dyn. rigidbody of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_SET_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_ANGULARSPEED_TITLE = "angular velocity (°/s) of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_1 = "push";  // untranslated
Blockly.Msg.UNITY_PHYSICS_PUSH_TITLE_2 = "with force";  // untranslated
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_1 = "apply to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_TORQUE_TITLE_2 = "a rotational force of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_1 = "set velocity (unit/s) of dyn. rigidbody of";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_SET_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_PHYSICS_VELOCITY_TITLE = "velocity (unit/s) of";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS2D_TITLE = "° (2D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_1 = "° around ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ANGLEAXIS_TITLE_2 = " (3D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_APPLY_VECTOR_TITLE = " rotated by ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_1 = "combine rotations: rotate first ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_COMBINE_TITLE_2 = " and then ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_2D_TITLE_1 = "2D direction (0°-360°) of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_1 = "difference between rotation ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_2 = " and ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ANGLE_TITLE_3 = " in degrees";  // untranslated
Blockly.Msg.UNITY_QUATERNION_GET_ROTATION_TITLE = "rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_IDENTITY_TITLE = "not rotated";  // untranslated
Blockly.Msg.UNITY_QUATERNION_INVERSE_TITLE = "inverse rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_NEG = "negative side of my x-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_XAXIS_POS = "positive side of my x-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_NEG = "negative side of my y-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_OPT_YAXIS_POS = "positive side of my y-axis";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_1 = "rotation where the ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_2 = " points towards ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_3 = " from ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_2D_TITLE_4 = " (2D)";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_1 = "rotation around axis ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_2 = " where my ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_3 = " points towards ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_LOOKTOWARDS_TITLE_4 = " from ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_1 = "change rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_ROTATE_TITLE_2 = "with";  // untranslated
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_1 = "set rotation of ";  // untranslated
Blockly.Msg.UNITY_QUATERNION_SET_ROTATION_TITLE_2 = " on ";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST = "the distance";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_DIST_DEFNAME = "distance";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL = "the normal vector where the laser hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_NORMAL_DEFNAME = "normal";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ = "the object that got hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_OBJ_DEFNAME = "hitObject";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT = "the point where the laser hit";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_PARAM_POINT_DEFNAME = "point";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_1 = "shoot a laser";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_2 = "from position";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_3 = "in direction";  // untranslated
Blockly.Msg.UNITY_RAYCAST_RAYCAST_TITLE_4 = "when it hits do";  // untranslated
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_1 = "set appearance of";  // untranslated
Blockly.Msg.UNITY_RENDER_SETSPRITE_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_SCENE_GOTO_TITLE = "go to scene with name";  // untranslated
Blockly.Msg.UNITY_SCREEN_CAMERA_MAIN_TITLE = "the main camera object";  // untranslated
Blockly.Msg.UNITY_SCREEN_MOUSE_POSITION_TITLE = "pixel position of the mouse on the screen";  // untranslated
Blockly.Msg.UNITY_SCREEN_MOUSE_SCENE_POSITION_2D_TITLE = "position of the mouse in the scene with z=0 (2D)";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_1 = "pixel position on screen of coordinate";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCENE_TO_SCREEN_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_SIZE_TITLE = "size of screen in pixels";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_1 = "look direction in scene of pixel position";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_DIR_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_1 = "coordinate in scene of pixel position";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_2 = "for camera of";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_3 = "on the plane with normal";  // untranslated
Blockly.Msg.UNITY_SCREEN_SCREEN_TO_SCENE_TITLE_4 = "containing point";  // untranslated
Blockly.Msg.UNITY_THIS = "myself";  // untranslated
Blockly.Msg.UNITY_TIME_DELTA_TITLE = "delta time";  // untranslated
Blockly.Msg.UNITY_TIME_LEVELLOAD_TITLE = "time since start of the scene";  // untranslated
Blockly.Msg.UNITY_TIME_LOOP_TITLE = "time since start of repeat";  // untranslated
Blockly.Msg.UNITY_TIME_REPEAT_TILL_TITLE = "repeat each frame 🕑 while ";  // untranslated
Blockly.Msg.UNITY_TIME_REPEAT_TITLE = "repeat each frame 🕑";  // untranslated
Blockly.Msg.UNITY_TIME_WAITFRAME_TITLE = "wait till next frame 🕑";  // untranslated
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_1 = "wait";  // untranslated
Blockly.Msg.UNITY_TIME_WAITTIME_TITLE_2 = "second(s) 🕑";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_1 = "jump";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_JUMPTO_TITLE_2 = "to";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_1 = "jump";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_MOVE_TITLE_2 = "additionally with";  // untranslated
Blockly.Msg.UNITY_TRANSFORM_POSITION_TITLE = "position of";  // untranslated
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_1 = "set UI text of";  // untranslated
Blockly.Msg.UNITY_UI_SET_TEXT_TITLE_2 = "on";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_X_TITLE = "x";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_Y_TITLE = "y";  // untranslated
Blockly.Msg.UNITY_VECTOR_CREATE_Z_TITLE = "z";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_TITLE_1 = "of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_X_TITLE = "x of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_Y_TITLE = "y of";  // untranslated
Blockly.Msg.UNITY_VECTOR_FETCH_Z_TITLE = "z of";  // untranslated
Blockly.Msg.UNITY_VECTOR_LENGTH_TITLE = "length of";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_ADD = "Gives the element wise sum of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MINUS = "Gives the element wise subtraction of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MATH_TOOLTIP_MULTIPLY = "Gives the element wise multiplication of two vectors.";  // untranslated
Blockly.Msg.UNITY_VECTOR_MULTIPLY_TITLE = "times";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_BACK = "backward (depth) (0, 0, -1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_DOWN = "down (0, -1, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_FORWARD = "forward (depth) (0, 0, 1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_LEFT = "left (-1, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ONE = "one (1, 1, 1)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_RIGHT = "right (1, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_UP = "up (0, 1, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PICK_OPT_ZERO = "zero (0, 0, 0)";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_CROSS = "cross";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_OPTION_DOT = "dot";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_1 = "product of";  // untranslated
Blockly.Msg.UNITY_VECTOR_PRODUCT_TITLE_2 = "and";  // untranslated
Blockly.Msg.UNITY_VECTOR_TOSIZE_TITLE = "scaled to length";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_1 = "position local to";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_2 = "of position";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOLOCAL_TITLE_3 = "in the world";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_1 = "position in the world of position";  // untranslated
Blockly.Msg.UNITY_VECTOR_TRANSFORMPOINT_TOWORLD_TITLE_2 = "local to";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "Element";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Generier/erzeiche \"Schreibe %1\"";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Gebt der Variable sein Weart zurück.";
Blockly.Msg.VARIABLES_SET = "Schreib %1 zu %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Generier/erzeich \"Lese %1\"";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Setzt en Variable sei Weart.";
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "List Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "List Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "List Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "List String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_GAMEOBJECT = "GameObject";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_QUATERNION = "Rotation";  // untranslated
Blockly.Msg.VARIABLES_TYPE_SPRITE = "Sprite";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_VECTOR3 = "Vector3";  // untranslated
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;